% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairs-maker.R
\name{student_pairs}
\alias{student_pairs}
\title{Generate optimised student pairs based on latest attendance}
\usage{
student_pairs(
  attendance,
  group_size = 2,
  population = 1000,
  file_path = NULL,
  seed = NULL
)
}
\arguments{
\item{attendance}{A wide-format tibble returned by \code{take_attendance()}, with columns \code{name}, \code{WeekX}, etc.}

\item{group_size}{Integer. Number of students per group. Default is 2.}

\item{population}{Integer. Number of pairing attempts (used to minimise repeats). Default is 1000.}

\item{file_path}{Optional. Path to a CSV file to load past pairings \emph{and} save new ones.}

\item{seed}{Optional. Random seed for reproducibility.}
}
\value{
A tibble with columns: \code{week} (Integer), \code{group} (Character), and \code{pairing} (Character).
Each row represents one group.
}
\description{
This wrapper function uses \code{create_pairs()} to generate optimised student pairs or groups,
based on the latest attendance. It automatically attempts to minimise repeat pairings
by reading pairing history from \code{file_path} if the file exists.
}
\details{
The function expects a wide-format attendance tibble, as produced by \code{take_attendance()},
where column 1 is \code{name}, and column 2 is the most recent session (with logical TRUE/FALSE values for attendance).

If a file path is provided and the file exists, it is read and used as pairing history
to guide group allocation (via \code{convert_to_list()}).
The resulting pairs are returned as a tidy tibble and can also be saved to the same file path.
}
\examples{
# Simulate a class list
class_list <- data.frame(name = rownames(USJudgeRatings))

# Take attendance for week 1 (students 1 to 8 are present)
attendance <- take_attendance(full_class = class_list,
                              present_students = 1:8,
                              session_id = "Week_1")

# Generate pairings for Week 1
pairs_week1 <- student_pairs(attendance = attendance, group_size = 2)

# Take attendance for Week 2
attendance2 <- take_attendance(full_class = class_list,
                               present_students = c(2, 3, 6, 7, 9, 10),
                               session_id = "Week_2")

# Generate pairings using Week 1 as history
pairs_week2 <- student_pairs(attendance = attendance2,
                             group_size = 2)

\dontrun{
# Save to CSV file
student_pairs(attendance = attendance,
              file_path = "student_pairs.csv")
}
}
